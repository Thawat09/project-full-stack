@layouts.master({ title: "Dashboard" })
  @slot('style')
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />
    <style>
      ##calendar {
        width: 90vw;
        max-width: 90vw;
        margin: 5vh auto;
      }
    </style>
  @end

  <div class="position-fixed top-0 end-0 p-3" style="z-index: 9999">
    <div id="toastContainer" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="d-flex">
        <div class="toast-body" id="toastMessage">
          Updated successfully
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close" />
      </div>
    </div>
  </div>

  <div id="calendar">
  </div>

  @slot('script')
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script>
      function showToast(message, isSuccess = true) {
        const toastEl = document.getElementById('toastContainer')
        const toastBody = document.getElementById('toastMessage')

        toastBody.textContent = message
        toastEl.classList.remove('bg-success', 'bg-danger')
        toastEl.classList.add(isSuccess ? 'bg-success' : 'bg-danger')

        const toast = new bootstrap.Toast(toastEl)

        toast.show()
      }

      document.addEventListener('DOMContentLoaded', function () {
        const calendarEl = document.getElementById('calendar')
        const calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: 'dayGridMonth',
          height: '70vh',
          editable: true,
          events: [
            @each(task in tasks)
              {
                id: {{ task.id }},
                title: "{{ task.title }}",
                start: "{{ task.start_date }}",
                end: "{{ task.end_date }}",
                backgroundColor: "{{ task.status === 'pending' ? '#ffc107' : task.status === 'in_progress' ? '#0d6efd' : '#198754' }}",
                borderColor: "#000",
                textColor: "#fff",
                extendedProps: {
                  assignedTo: "{{ task.user.username }}",
                  status: "{{ task.status }}"
                }
              },
            @endeach
          ],
          eventClick: function(info) {
            window.location.href = `/tasks/${info.event.id}/edit`;
          },
          eventDrop: function(info) {
            fetch('/tasks/update-date', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': "{{ csrfToken }}"
              },
              body: JSON.stringify({
                id: info.event.id,
                newDate: info.event.startStr
              })
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                showToast('วันของกิจกรรมถูกอัพเดทเรียบร้อยแล้ว', true)
              } else {
                showToast('ไม่สามารถอัพเดทวันของกิจกรรมได้', false)
              }
            })
            .catch(error => {
              showToast('เกิดข้อผิดพลาดระหว่างการอัพเดท', false)
            });
          }
        });
        calendar.render();
      });
    </script>
  @end
@end
